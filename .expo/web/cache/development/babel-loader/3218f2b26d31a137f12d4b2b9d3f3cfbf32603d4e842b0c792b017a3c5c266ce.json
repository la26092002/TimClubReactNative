{"ast":null,"code":"import Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withNavigation } from \"react-navigation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Event(_ref) {\n  var id = _ref.id,\n    title = _ref.title,\n    image = _ref.image,\n    navigation = _ref.navigation;\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Event\", {\n        id: id\n      });\n    },\n    children: _jsxs(View, {\n      style: [styles.view, styles.container],\n      children: [_jsx(View, {\n        style: styles.view1,\n        children: _jsx(Image, {\n          source: image,\n          style: styles.image\n        })\n      }), _jsx(View, {\n        style: styles.view2,\n        children: _jsx(Text, {\n          style: styles.text,\n          children: title\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 500,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowOffset: {\n      width: 5,\n      height: 5\n    },\n    shadowColor: \"black\",\n    shadowOpacity: 0.1,\n    elevation: 3,\n    marginBottom: 7,\n    backgroundColor: \"white\"\n  },\n  image: {\n    width: 75,\n    height: 75,\n    borderRadius: 400,\n    marginLeft: 10\n  },\n  text: {},\n  view: {\n    flexDirection: \"row\"\n  },\n  view1: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  view2: {\n    flex: 3,\n    alignItems: \"center\"\n  }\n});\nexport default withNavigation(Event);","map":{"version":3,"names":["withNavigation","jsx","_jsx","jsxs","_jsxs","Event","_ref","id","title","image","navigation","TouchableOpacity","onPress","navigate","children","View","style","styles","view","container","view1","Image","source","view2","Text","text","StyleSheet","create","borderRadius","alignItems","justifyContent","shadowOffset","width","height","shadowColor","shadowOpacity","elevation","marginBottom","backgroundColor","marginLeft","flexDirection","flex"],"sources":["C:/ReactNativeApp/TheInteligentsMind/my-app/src/Components/EventsScreen/Event.js"],"sourcesContent":["import { Image, StatusBar, StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { withNavigation } from \"react-navigation\";\r\n\r\n function Event({id,title,image,navigation}) {\r\n    return (\r\n        <TouchableOpacity onPress={() => navigation.navigate(\"Event\",{id:id})}>\r\n                <View style={[styles.view,styles.container]}>\r\n                    <View style={styles.view1}>\r\n                        <Image source={image} style={styles.image} />\r\n                    </View>\r\n                    <View style={styles.view2}>\r\n                        <Text style={styles.text}>{title}</Text>\r\n                    </View>\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        borderRadius: 500,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        shadowOffset: { width: 5, height: 5 },\r\n        shadowColor: \"black\",\r\n        shadowOpacity: 0.1,\r\n        elevation: 3,\r\n        marginBottom: 7,\r\n        backgroundColor:\"white\"\r\n      },\r\n    image: {\r\n        width: 75,\r\n        height: 75,\r\n        borderRadius: 400,\r\n        marginLeft: 10,\r\n    },\r\n    text: {\r\n\r\n    },\r\n    view: {\r\n        flexDirection: \"row\",\r\n    },\r\n    view1: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n    },\r\n    view2: {\r\n        flex: 3,\r\n        alignItems: \"center\",\r\n    },\r\n});\r\n\r\nexport default withNavigation(Event);"],"mappings":";;;;;;AACA,SAASA,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,SAASC,KAAKA,CAAAC,IAAA,EAA8B;EAAA,IAA5BC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IAACC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAACC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAACC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;EACtC,OACIR,IAAA,CAACS,gBAAgB;IAACC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMF,UAAU,CAACG,QAAQ,CAAC,OAAO,EAAC;QAACN,EAAE,EAACA;MAAE,CAAC,CAAC;IAAA,CAAC;IAAAO,QAAA,EAC9DV,KAAA,CAACW,IAAI;MAACC,KAAK,EAAE,CAACC,MAAM,CAACC,IAAI,EAACD,MAAM,CAACE,SAAS,CAAE;MAAAL,QAAA,GACxCZ,IAAA,CAACa,IAAI;QAACC,KAAK,EAAEC,MAAM,CAACG,KAAM;QAAAN,QAAA,EACtBZ,IAAA,CAACmB,KAAK;UAACC,MAAM,EAAEb,KAAM;UAACO,KAAK,EAAEC,MAAM,CAACR;QAAM,CAAE;MAAC,CAC3C,CAAC,EACPP,IAAA,CAACa,IAAI;QAACC,KAAK,EAAEC,MAAM,CAACM,KAAM;QAAAT,QAAA,EACtBZ,IAAA,CAACsB,IAAI;UAACR,KAAK,EAAEC,MAAM,CAACQ,IAAK;UAAAX,QAAA,EAAEN;QAAK,CAAO;MAAC,CACtC,CAAC;IAAA,CACT;EAAC,CACO,CAAC;AAE3B;AAEA,IAAMS,MAAM,GAAGS,UAAU,CAACC,MAAM,CAAC;EAC7BR,SAAS,EAAE;IACPS,YAAY,EAAE,GAAG;IACjBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACrCC,WAAW,EAAE,OAAO;IACpBC,aAAa,EAAE,GAAG;IAClBC,SAAS,EAAE,CAAC;IACZC,YAAY,EAAE,CAAC;IACfC,eAAe,EAAC;EAClB,CAAC;EACH7B,KAAK,EAAE;IACHuB,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVL,YAAY,EAAE,GAAG;IACjBW,UAAU,EAAE;EAChB,CAAC;EACDd,IAAI,EAAE,CAEN,CAAC;EACDP,IAAI,EAAE;IACFsB,aAAa,EAAE;EACnB,CAAC;EACDpB,KAAK,EAAE;IACHqB,IAAI,EAAE,CAAC;IACPZ,UAAU,EAAE;EAChB,CAAC;EACDN,KAAK,EAAE;IACHkB,IAAI,EAAE,CAAC;IACPZ,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AAEF,eAAe7B,cAAc,CAACK,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}